name: End-to-end tests
on:
  workflow_call:
    inputs:
      instance_identifiers:
        description: 'Comma separated list of instance identifiers'
        required: false
        type: string
        default: 'sunnydale,tampere-ilmasto,espoo-ilmasto,longmont-indicators,hame-ilmasto'
      image:
        description: 'Image (incl. repo, path, tag) to test'
        required: true
        type: string
      backend_base_url:
        description: 'Base URL for backend API'
        required: true
        type: string
        default: 'https://api.watch.kausal.tech'
      build_id:
        description: 'Unique ID for the build'
        required: true
        type: string
      s3_endpoint:
        description: 'S3 endpoint URL where to upload test artifacts'
        required: false
        type: string
      s3_bucket:
        description: 'S3 bucket'
        required: false
        type: string
      nr_workers:
        description: 'How many test workers to use'
        required: false
        type: number
        default: 2

    secrets:
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false

    outputs:
      test_report_url:
        description: 'URL to e2e test report'
        value: ${{ jobs.e2e_test.outputs.test_report_url }}

jobs:
  e2e_test:
    name: Run tests
    runs-on: runner-prod
    container:
      image: harbor.kausal.tech/library/playwright:v1.54.1
    env:
      TEST_PLAN_IDENTIFIERS: ${{ inputs.instance_identifiers }}
      WATCH_BACKEND_URL: ${{ inputs.backend_base_url }}
      TEST_PAGE_BASE_URL: 'http://{planId}.localhost:3000'
      CI: 1
    services:
      app:
        image: ${{ inputs.image }}
        env:
          WILDCARD_DOMAINS: localhost
          DEPLOYMENT_TYPE: ci
          SENTRY_DSN: ${{ vars.SENTRY_DSN }}
          SENTRY_ENVIRONMENT: ci
          WATCH_BACKEND_URL: ${{ inputs.backend_base_url }}
          AUTH_SECRET: abcd
          AUTH_TRUST_HOST: true
          HOSTNAME: 0.0.0.0
    outputs:
      test_report_url: ${{ steps.upload.outputs.test_report_url }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies for e2e tests
        run: |
          corepack enable
          if [ -f pnpm-lock.yaml ]; then
            pnpm install
          else
            npm ci
          fi
        working-directory: ./e2e-tests

      - name: Running Playwright e2e tests
        run: node_modules/.bin/playwright test --workers ${{ inputs.nr_workers }}
        id: playwright_test
        working-directory: ./e2e-tests

      - name: Upload test report to S3
        id: upload
        if: always()
        run: |
          s3_path=${{ inputs.s3_bucket }}/${{ inputs.build_id }}/${{ github.run_id }}
          s3cmd --no-mime-magic --guess-mime-type \
            --host ${{ inputs.s3_endpoint }} --host-bucket ${{ inputs.s3_endpoint }} \
            put --recursive playwright-report s3://${s3_path}/
          export TEST_REPORT_URL="https://${{ inputs.s3_endpoint }}/${s3_path}/playwright-report/index.html"
          echo "test_report_url=${TEST_REPORT_URL}" >> $GITHUB_OUTPUT
          test_report="🔗 [Test report](${TEST_REPORT_URL})"
          if [ "${{ steps.playwright_test.outcome == 'success' }}" = "true" ] ; then
            echo "✅ End-to-end tests succeeded. $test_report" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ End-to-end tests failed. $test_report" >> $GITHUB_STEP_SUMMARY
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        shell: bash
        working-directory: ./e2e-tests

      - uses: daun/playwright-report-summary@v3
        if: always()
        with:
          report-file: ./e2e-tests/test-results.json
          report-url: ${{steps.upload.outputs.test_report_url}}
